plugins {
    id 'java'
    id 'org.kordamp.gradle.jandex' version '2.1.0'
    id 'maven-publish'
}

wrapper {
    gradleVersion = '8.10.1'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'jakarta.json:jakarta.json-api:2.1.3'
    implementation 'jakarta.json.bind:jakarta.json.bind-api:3.0.1'
    implementation 'org.eclipse.microprofile.graphql:microprofile-graphql-api:2.0'
    implementation "io.smallrye:smallrye-graphql-api:$smallrye_graphql_version"
    implementation "io.smallrye:smallrye-graphql-client-api:$smallrye_graphql_version"
    implementation 'jakarta.json.bind:jakarta.json.bind-api:3.0.1'

    testImplementation "io.smallrye:smallrye-graphql-client-implementation-vertx:$smallrye_graphql_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.10.4"
    testImplementation "org.assertj:assertj-core:3.11.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.10.4"
    testRuntimeOnly 'org.jboss.logmanager:jboss-logmanager:3.0.6.Final'
}

group 'com.unblu.gitlab'

java {
    withJavadocJar()
    withSourcesJar()

    compileJava.options.encoding = "UTF-8"
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    jvmArgs '-Djava.util.logging.manager=org.jboss.logmanager.LogManager'
    useJUnitPlatform()
}

tasks.named("javadoc") {
    inputs.files(tasks.getByPath("jandex").outputs.files)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = 'GitLab WorkItem GraphQL client'
                description = 'Smallrye Typesafe GraphQL client for GitLab WorkItems '
                packaging = 'jar'
                url = 'https://' + "$githubRepositoryOwner" + '.github.io/' + "$githubRepositoryName" + '/'
                licenses {
                    license {
                        name = 'Apache 2.0 License'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0'
                    }
                }
                developers {
                    developer {
                        url = 'https://github.com/orgs/' + "$githubRepositoryOwner" + '/people'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/' + "$githubRepositoryOwner" + '/' + "$githubRepositoryName" + '.git'
                    developerConnection = 'scm:git:https://github.com/' + "$githubRepositoryOwner" + '/' + "$githubRepositoryName" + '.git'
                    url = 'https://github.com/' + "$githubRepositoryOwner" + '/' + "$githubRepositoryName" + '/'
                }
            }
            from components.java
        }
    }
}