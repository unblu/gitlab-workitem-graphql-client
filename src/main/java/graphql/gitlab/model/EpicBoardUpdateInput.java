package graphql.gitlab.model;

import java.util.List;
import java.util.Objects;

import org.eclipse.microprofile.graphql.Name;

import graphql.gitlab.GitLabInputRequest;

/**
 * Autogenerated input type of EpicBoardUpdate
 */
@Name("EpicBoardUpdateInput")
public class EpicBoardUpdateInput implements GitLabInputRequest {

    /**
     * A unique identifier for the client performing the mutation.
     */
    private String clientMutationId;

    /**
     * Whether or not display epic colors.
     */
    private Boolean displayColors;

    /**
     * Board name.
     */
    private String name;

    /**
     * Whether or not backlog list is hidden.
     */
    private Boolean hideBacklogList;

    /**
     * Whether or not closed list is hidden.
     */
    private Boolean hideClosedList;

    /**
     * IDs of labels to be added to the board.
     */
    private List<LabelID> labelIds;

    /**
     * Epic board global ID.
     */
    private BoardsEpicBoardID id;

    public String getClientMutationId() {
        return clientMutationId;
    }

    public EpicBoardUpdateInput setClientMutationId(String clientMutationId) {
        this.clientMutationId = clientMutationId;
        return this;
    }

    public Boolean getDisplayColors() {
        return displayColors;
    }

    public EpicBoardUpdateInput setDisplayColors(Boolean displayColors) {
        this.displayColors = displayColors;
        return this;
    }

    public String getName() {
        return name;
    }

    public EpicBoardUpdateInput setName(String name) {
        this.name = name;
        return this;
    }

    public Boolean getHideBacklogList() {
        return hideBacklogList;
    }

    public EpicBoardUpdateInput setHideBacklogList(Boolean hideBacklogList) {
        this.hideBacklogList = hideBacklogList;
        return this;
    }

    public Boolean getHideClosedList() {
        return hideClosedList;
    }

    public EpicBoardUpdateInput setHideClosedList(Boolean hideClosedList) {
        this.hideClosedList = hideClosedList;
        return this;
    }

    public List<LabelID> getLabelIds() {
        return labelIds;
    }

    public EpicBoardUpdateInput setLabelIds(List<LabelID> labelIds) {
        this.labelIds = labelIds;
        return this;
    }

    public BoardsEpicBoardID getId() {
        return id;
    }

    public EpicBoardUpdateInput setId(BoardsEpicBoardID id) {
        this.id = id;
        return this;
    }

    @Override
    public int hashCode() {
        return Objects.hash(clientMutationId, displayColors, name, hideBacklogList, hideClosedList, labelIds, id);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        EpicBoardUpdateInput other = (EpicBoardUpdateInput) obj;
        return Objects.equals(clientMutationId, other.clientMutationId) && Objects.equals(displayColors, other.displayColors) && Objects.equals(name, other.name) && Objects.equals(hideBacklogList, other.hideBacklogList) && Objects.equals(hideClosedList, other.hideClosedList) && Objects.equals(labelIds, other.labelIds) && Objects.equals(id, other.id);
    }

    @Override
    public String toString() {
        return "EpicBoardUpdateInput [clientMutationId=" + clientMutationId + ", displayColors=" + displayColors + ", name=" + name + ", hideBacklogList=" + hideBacklogList + ", hideClosedList=" + hideClosedList + ", labelIds=" + labelIds + ", id=" + id + "]";
    }

}
