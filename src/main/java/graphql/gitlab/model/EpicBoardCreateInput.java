package graphql.gitlab.model;

import java.util.List;
import java.util.Objects;

import org.eclipse.microprofile.graphql.Name;

import com.fasterxml.jackson.annotation.JsonProperty;

import graphql.gitlab.GitLabInputRequest;

/**
 * Autogenerated input type of EpicBoardCreate
 */
@Name("EpicBoardCreateInput")
public class EpicBoardCreateInput implements GitLabInputRequest {

    /**
     * A unique identifier for the client performing the mutation.
     */
    private String clientMutationId;

    /**
     * Whether or not display epic colors.
     */
    private Boolean displayColors;

    /**
     * Board name.
     */
    private String name;

    /**
     * Whether or not backlog list is hidden.
     */
    private Boolean hideBacklogList;

    /**
     * Whether or not closed list is hidden.
     */
    private Boolean hideClosedList;

    /**
     * IDs of labels to be added to the board.
     */
    private List<LabelID> labelIds;

    /**
     * Full path of the group with which the resource is associated.
     */
    private String groupPath;

    public String getClientMutationId() {
        return clientMutationId;
    }

    public EpicBoardCreateInput setClientMutationId(String clientMutationId) {
        this.clientMutationId = clientMutationId;
        return this;
    }

    public Boolean getDisplayColors() {
        return displayColors;
    }

    public EpicBoardCreateInput setDisplayColors(Boolean displayColors) {
        this.displayColors = displayColors;
        return this;
    }

    public String getName() {
        return name;
    }

    public EpicBoardCreateInput setName(String name) {
        this.name = name;
        return this;
    }

    public Boolean getHideBacklogList() {
        return hideBacklogList;
    }

    public EpicBoardCreateInput setHideBacklogList(Boolean hideBacklogList) {
        this.hideBacklogList = hideBacklogList;
        return this;
    }

    public Boolean getHideClosedList() {
        return hideClosedList;
    }

    public EpicBoardCreateInput setHideClosedList(Boolean hideClosedList) {
        this.hideClosedList = hideClosedList;
        return this;
    }

    public List<LabelID> getLabelIds() {
        return labelIds;
    }

    public EpicBoardCreateInput setLabelIds(List<LabelID> labelIds) {
        this.labelIds = labelIds;
        return this;
    }

    public String getGroupPath() {
        return groupPath;
    }

    public EpicBoardCreateInput setGroupPath(String groupPath) {
        this.groupPath = groupPath;
        return this;
    }

    @JsonProperty("__typename")
    public String getTypename() {
        return "EpicBoardCreateInput";
    }

    @JsonProperty("__typename")
    public void setTypename(String type) {
        //Setter only for Jackson
        if(!"EpicBoardCreateInput".equals(type)) {
            throw new IllegalArgumentException("Unexpected '__typename' value: " + type);
        }
    }

    @Override
    public int hashCode() {
        return Objects.hash(clientMutationId, displayColors, name, hideBacklogList, hideClosedList, labelIds, groupPath);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        EpicBoardCreateInput other = (EpicBoardCreateInput) obj;
        return Objects.equals(clientMutationId, other.clientMutationId) && Objects.equals(displayColors, other.displayColors) && Objects.equals(name, other.name) && Objects.equals(hideBacklogList, other.hideBacklogList) && Objects.equals(hideClosedList, other.hideClosedList) && Objects.equals(labelIds, other.labelIds) && Objects.equals(groupPath, other.groupPath);
    }

    @Override
    public String toString() {
        return "EpicBoardCreateInput [clientMutationId=" + clientMutationId + ", displayColors=" + displayColors + ", name=" + name + ", hideBacklogList=" + hideBacklogList + ", hideClosedList=" + hideClosedList + ", labelIds=" + labelIds + ", groupPath=" + groupPath + "]";
    }

}
