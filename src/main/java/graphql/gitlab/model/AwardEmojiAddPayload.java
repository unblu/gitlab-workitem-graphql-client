package graphql.gitlab.model;

import java.util.List;
import java.util.Objects;

import org.eclipse.microprofile.graphql.Name;

import graphql.gitlab.GitLabPayloadResponse;

/**
 * Autogenerated return type of AwardEmojiAdd.
 */
@Name("AwardEmojiAddPayload")
public class AwardEmojiAddPayload implements GitLabPayloadResponse {

    /**
     * Emoji reactions after mutation.
     */
    private AwardEmoji awardEmoji;

    /**
     * A unique identifier for the client performing the mutation.
     */
    private String clientMutationId;

    /**
     * Errors encountered during execution of the mutation.
     */
    private List<String> errors;

    public AwardEmoji getAwardEmoji() {
        return awardEmoji;
    }

    public AwardEmojiAddPayload setAwardEmoji(AwardEmoji awardEmoji) {
        this.awardEmoji = awardEmoji;
        return this;
    }

    public String getClientMutationId() {
        return clientMutationId;
    }

    public AwardEmojiAddPayload setClientMutationId(String clientMutationId) {
        this.clientMutationId = clientMutationId;
        return this;
    }

    public List<String> getErrors() {
        return errors;
    }

    public AwardEmojiAddPayload setErrors(List<String> errors) {
        this.errors = errors;
        return this;
    }

    @Override
    public int hashCode() {
        return Objects.hash(awardEmoji, clientMutationId, errors);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        AwardEmojiAddPayload other = (AwardEmojiAddPayload) obj;
        return Objects.equals(awardEmoji, other.awardEmoji) && Objects.equals(clientMutationId, other.clientMutationId) && Objects.equals(errors, other.errors);
    }

    @Override
    public String toString() {
        return "AwardEmojiAddPayload [awardEmoji=" + awardEmoji + ", clientMutationId=" + clientMutationId + ", errors=" + errors + "]";
    }

}
