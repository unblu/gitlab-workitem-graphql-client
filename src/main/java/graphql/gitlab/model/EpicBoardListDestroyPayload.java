package graphql.gitlab.model;

import java.util.List;
import java.util.Objects;

import org.eclipse.microprofile.graphql.Name;

import com.fasterxml.jackson.annotation.JsonProperty;

import graphql.gitlab.GitLabPayloadResponse;

/**
 * Autogenerated return type of EpicBoardListDestroy.
 */
@Name("EpicBoardListDestroyPayload")
public class EpicBoardListDestroyPayload implements GitLabPayloadResponse {

    /**
     * A unique identifier for the client performing the mutation.
     */
    private String clientMutationId;

    /**
     * Errors encountered during execution of the mutation.
     */
    private List<String> errors;

    /**
     * Epic board list. `null` if the board was destroyed successfully.
     */
    private EpicList list;

    public String getClientMutationId() {
        return clientMutationId;
    }

    public EpicBoardListDestroyPayload setClientMutationId(String clientMutationId) {
        this.clientMutationId = clientMutationId;
        return this;
    }

    public List<String> getErrors() {
        return errors;
    }

    public EpicBoardListDestroyPayload setErrors(List<String> errors) {
        this.errors = errors;
        return this;
    }

    public EpicList getList() {
        return list;
    }

    public EpicBoardListDestroyPayload setList(EpicList list) {
        this.list = list;
        return this;
    }

    @JsonProperty("__typename")
    public String getTypename() {
        return "EpicBoardListDestroyPayload";
    }

    @JsonProperty("__typename")
    public void setTypename(String type) {
        //Setter only for Jackson
        if(!"EpicBoardListDestroyPayload".equals(type)) {
            throw new IllegalArgumentException("Unexpected '__typename' value: " + type);
        }
    }

    @Override
    public int hashCode() {
        return Objects.hash(clientMutationId, errors, list);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        EpicBoardListDestroyPayload other = (EpicBoardListDestroyPayload) obj;
        return Objects.equals(clientMutationId, other.clientMutationId) && Objects.equals(errors, other.errors) && Objects.equals(list, other.list);
    }

    @Override
    public String toString() {
        return "EpicBoardListDestroyPayload [clientMutationId=" + clientMutationId + ", errors=" + errors + ", list=" + list + "]";
    }

}
