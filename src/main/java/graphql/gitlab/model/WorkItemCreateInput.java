package graphql.gitlab.model;

import java.util.Objects;

import org.eclipse.microprofile.graphql.Name;

import graphql.gitlab.GitLabInputRequest;

/**
 * Autogenerated input type of WorkItemCreate
 */
@Name("WorkItemCreateInput")
public class WorkItemCreateInput implements GitLabInputRequest {

    /**
     * A unique identifier for the client performing the mutation.
     */
    private String clientMutationId;

    /**
     * Input for assignees widget.
     */
    private WorkItemWidgetAssigneesInput assigneesWidget;

    /**
     * Input for description widget.
     */
    private WorkItemWidgetDescriptionInput descriptionWidget;

    /**
     * Timestamp when the work item was created. Available only for admins and project owners.
     */
    private Time createdAt;

    /**
     * Input for hierarchy widget.
     */
    private WorkItemWidgetHierarchyCreateInput hierarchyWidget;

    /**
     * Input for labels widget.
     */
    private WorkItemWidgetLabelsCreateInput labelsWidget;

    /**
     * Full path of the namespace(project or group) the work item is created in.
     */
    private String namespacePath;

    /**
     * Title of the work item.
     */
    private String title;

    /**
     * Global ID of a work item type.
     */
    private WorkItemsTypeID workItemTypeId;

    public String getClientMutationId() {
        return clientMutationId;
    }

    public WorkItemCreateInput setClientMutationId(String clientMutationId) {
        this.clientMutationId = clientMutationId;
        return this;
    }

    public WorkItemWidgetAssigneesInput getAssigneesWidget() {
        return assigneesWidget;
    }

    public WorkItemCreateInput setAssigneesWidget(WorkItemWidgetAssigneesInput assigneesWidget) {
        this.assigneesWidget = assigneesWidget;
        return this;
    }

    public WorkItemWidgetDescriptionInput getDescriptionWidget() {
        return descriptionWidget;
    }

    public WorkItemCreateInput setDescriptionWidget(WorkItemWidgetDescriptionInput descriptionWidget) {
        this.descriptionWidget = descriptionWidget;
        return this;
    }

    public Time getCreatedAt() {
        return createdAt;
    }

    public WorkItemCreateInput setCreatedAt(Time createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    public WorkItemWidgetHierarchyCreateInput getHierarchyWidget() {
        return hierarchyWidget;
    }

    public WorkItemCreateInput setHierarchyWidget(WorkItemWidgetHierarchyCreateInput hierarchyWidget) {
        this.hierarchyWidget = hierarchyWidget;
        return this;
    }

    public WorkItemWidgetLabelsCreateInput getLabelsWidget() {
        return labelsWidget;
    }

    public WorkItemCreateInput setLabelsWidget(WorkItemWidgetLabelsCreateInput labelsWidget) {
        this.labelsWidget = labelsWidget;
        return this;
    }

    public String getNamespacePath() {
        return namespacePath;
    }

    public WorkItemCreateInput setNamespacePath(String namespacePath) {
        this.namespacePath = namespacePath;
        return this;
    }

    public String getTitle() {
        return title;
    }

    public WorkItemCreateInput setTitle(String title) {
        this.title = title;
        return this;
    }

    public WorkItemsTypeID getWorkItemTypeId() {
        return workItemTypeId;
    }

    public WorkItemCreateInput setWorkItemTypeId(WorkItemsTypeID workItemTypeId) {
        this.workItemTypeId = workItemTypeId;
        return this;
    }

    @Override
    public int hashCode() {
        return Objects.hash(clientMutationId, assigneesWidget, descriptionWidget, createdAt, hierarchyWidget, labelsWidget, namespacePath, title, workItemTypeId);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        WorkItemCreateInput other = (WorkItemCreateInput) obj;
        return Objects.equals(clientMutationId, other.clientMutationId) && Objects.equals(assigneesWidget, other.assigneesWidget) && Objects.equals(descriptionWidget, other.descriptionWidget) && Objects.equals(createdAt, other.createdAt) && Objects.equals(hierarchyWidget, other.hierarchyWidget) && Objects.equals(labelsWidget, other.labelsWidget) && Objects.equals(namespacePath, other.namespacePath) && Objects.equals(title, other.title) && Objects.equals(workItemTypeId, other.workItemTypeId);
    }

    @Override
    public String toString() {
        return "WorkItemCreateInput [clientMutationId=" + clientMutationId + ", assigneesWidget=" + assigneesWidget + ", descriptionWidget=" + descriptionWidget + ", createdAt=" + createdAt + ", hierarchyWidget=" + hierarchyWidget + ", labelsWidget=" + labelsWidget + ", namespacePath=" + namespacePath + ", title=" + title + ", workItemTypeId=" + workItemTypeId + "]";
    }

}
