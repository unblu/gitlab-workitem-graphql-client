package graphql.gitlab.model;

import java.util.List;
import java.util.Objects;

import org.eclipse.microprofile.graphql.Name;

import graphql.gitlab.GitLabInputRequest;

/**
 * Autogenerated input type of CreateBoard
 */
@Name("CreateBoardInput")
public class CreateBoardInput implements GitLabInputRequest {

    /**
     * A unique identifier for the client performing the mutation.
     */
    private String clientMutationId;

    /**
     * Full path of the project with which the resource is associated.
     */
    private String projectPath;

    /**
     * Full path of the group with which the resource is associated.
     */
    private String groupPath;

    /**
     * Board name.
     */
    private String name;

    /**
     * Whether or not backlog list is hidden.
     */
    private Boolean hideBacklogList;

    /**
     * Whether or not closed list is hidden.
     */
    private Boolean hideClosedList;

    /**
     * ID of user to be assigned to the board.
     */
    private UserID assigneeId;

    /**
     * ID of milestone to be assigned to the board.
     */
    private MilestoneID milestoneId;

    /**
     * ID of iteration to be assigned to the board.
     */
    private IterationID iterationId;

    /**
     * ID of iteration cadence to be assigned to the board.
     */
    private IterationsCadenceID iterationCadenceId;

    /**
     * Weight value to be assigned to the board.
     */
    private Integer weight;

    /**
     * IDs of labels to be added to the board.
     */
    private List<LabelID> labelIds;

    public String getClientMutationId() {
        return clientMutationId;
    }

    public CreateBoardInput setClientMutationId(String clientMutationId) {
        this.clientMutationId = clientMutationId;
        return this;
    }

    public String getProjectPath() {
        return projectPath;
    }

    public CreateBoardInput setProjectPath(String projectPath) {
        this.projectPath = projectPath;
        return this;
    }

    public String getGroupPath() {
        return groupPath;
    }

    public CreateBoardInput setGroupPath(String groupPath) {
        this.groupPath = groupPath;
        return this;
    }

    public String getName() {
        return name;
    }

    public CreateBoardInput setName(String name) {
        this.name = name;
        return this;
    }

    public Boolean getHideBacklogList() {
        return hideBacklogList;
    }

    public CreateBoardInput setHideBacklogList(Boolean hideBacklogList) {
        this.hideBacklogList = hideBacklogList;
        return this;
    }

    public Boolean getHideClosedList() {
        return hideClosedList;
    }

    public CreateBoardInput setHideClosedList(Boolean hideClosedList) {
        this.hideClosedList = hideClosedList;
        return this;
    }

    public UserID getAssigneeId() {
        return assigneeId;
    }

    public CreateBoardInput setAssigneeId(UserID assigneeId) {
        this.assigneeId = assigneeId;
        return this;
    }

    public MilestoneID getMilestoneId() {
        return milestoneId;
    }

    public CreateBoardInput setMilestoneId(MilestoneID milestoneId) {
        this.milestoneId = milestoneId;
        return this;
    }

    public IterationID getIterationId() {
        return iterationId;
    }

    public CreateBoardInput setIterationId(IterationID iterationId) {
        this.iterationId = iterationId;
        return this;
    }

    public IterationsCadenceID getIterationCadenceId() {
        return iterationCadenceId;
    }

    public CreateBoardInput setIterationCadenceId(IterationsCadenceID iterationCadenceId) {
        this.iterationCadenceId = iterationCadenceId;
        return this;
    }

    public Integer getWeight() {
        return weight;
    }

    public CreateBoardInput setWeight(Integer weight) {
        this.weight = weight;
        return this;
    }

    public List<LabelID> getLabelIds() {
        return labelIds;
    }

    public CreateBoardInput setLabelIds(List<LabelID> labelIds) {
        this.labelIds = labelIds;
        return this;
    }

    @Override
    public int hashCode() {
        return Objects.hash(clientMutationId, projectPath, groupPath, name, hideBacklogList, hideClosedList, assigneeId, milestoneId, iterationId, iterationCadenceId, weight, labelIds);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        CreateBoardInput other = (CreateBoardInput) obj;
        return Objects.equals(clientMutationId, other.clientMutationId) && Objects.equals(projectPath, other.projectPath) && Objects.equals(groupPath, other.groupPath) && Objects.equals(name, other.name) && Objects.equals(hideBacklogList, other.hideBacklogList) && Objects.equals(hideClosedList, other.hideClosedList) && Objects.equals(assigneeId, other.assigneeId) && Objects.equals(milestoneId, other.milestoneId) && Objects.equals(iterationId, other.iterationId) && Objects.equals(iterationCadenceId, other.iterationCadenceId) && Objects.equals(weight, other.weight) && Objects.equals(labelIds, other.labelIds);
    }

    @Override
    public String toString() {
        return "CreateBoardInput [clientMutationId=" + clientMutationId + ", projectPath=" + projectPath + ", groupPath=" + groupPath + ", name=" + name + ", hideBacklogList=" + hideBacklogList + ", hideClosedList=" + hideClosedList + ", assigneeId=" + assigneeId + ", milestoneId=" + milestoneId + ", iterationId=" + iterationId + ", iterationCadenceId=" + iterationCadenceId + ", weight=" + weight + ", labelIds=" + labelIds + "]";
    }

}
